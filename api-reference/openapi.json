{
  "openapi": "3.1.0",
  "info": {
    "title": "Accounting+ API",
    "description": "A comprehensive accounting API that provides endpoints for managing bank cash flow vouchers and journal transactions",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{url}",
      "description": "Main API Server",
      "variables": {
        "url": {
          "default": "api.example.com",
          "description": "The API base URL"
        }
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Vouchers",
      "description": "Bank cash flow voucher management"
    },
    {
      "name": "Journals",
      "description": "Journal transaction management"
    }
  ],
  "paths": {
    "/v1/vouchers": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "summary": "List Vouchers",
        "description": "Retrieve a list of bank cash flow vouchers with filtering options",
        "parameters": [
          {
            "name": "bank_account_code",
            "in": "query",
            "description": "Bank account code filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month filter (01-12)",
            "schema": {
              "type": "string",
              "pattern": "^(0[1-9]|1[0-2])$"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_status",
            "in": "query",
            "description": "Document status filter",
            "schema": {
              "type": "string",
              "enum": [
                "D",
                "F",
                "C"
              ],
              "description": "D = Draft, F = Final, C = Canceled"
            }
          },
          {
            "name": "bank_account_name_from",
            "in": "query",
            "description": "Source bank account name filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_account_name_to",
            "in": "query",
            "description": "Destination bank account name filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remark",
            "in": "query",
            "description": "Remark filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_number",
            "in": "query",
            "description": "Document number filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of vouchers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Create Voucher",
        "description": "Create a new bank cash flow voucher",
        "requestBody": {
          "description": "Voucher details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voucher created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/categories": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "summary": "List Categories",
        "description": "Retrieve voucher categories",
        "parameters": [
          {
            "name": "document_type",
            "in": "query",
            "description": "Document type filter",
            "schema": {
              "type": "string",
              "enum": [
                "T",
                "S",
                "R"
              ],
              "description": "T = Transfer Dana, S = Kirim Dana, R = Terima Dana"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{document_number}": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Get Voucher by ID",
        "description": "Retrieve a specific voucher by document number",
        "parameters": [
          {
            "name": "document_number",
            "in": "path",
            "required": true,
            "description": "Document number (URL encoded)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Voucher retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Voucher not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Update Voucher",
        "description": "Update an existing voucher",
        "parameters": [
          {
            "name": "document_number",
            "in": "path",
            "required": true,
            "description": "Document number (URL encoded)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated voucher details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voucher updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Voucher not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/journals": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "List Journals",
        "description": "Retrieve a list of journal transactions with filtering options",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 20
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date filter (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date filter (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Comma-separated list of account types",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document_number",
            "in": "query",
            "description": "Document number filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "Account number filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remark",
            "in": "query",
            "description": "Remark filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journals retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Journals"
        ],
        "summary": "Create Journal",
        "description": "Create a new journal transaction",
        "requestBody": {
          "description": "Journal transaction details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJournalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Journal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/journals/{document_number}": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Get Journal by ID",
        "description": "Retrieve a specific journal transaction by document number",
        "parameters": [
          {
            "name": "document_number",
            "in": "path",
            "required": true,
            "description": "Document number (URL encoded)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Journal not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Journals"
        ],
        "summary": "Cancel Journal",
        "description": "Cancel a journal transaction",
        "parameters": [
          {
            "name": "document_number",
            "in": "path",
            "required": true,
            "description": "Document number (URL encoded)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Journal not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VoucherListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "VoucherResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/VoucherDetail"
          }
        }
      },
      "VoucherDetailResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/VoucherDetail"
          }
        }
      },
      "CategoriesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "JournalListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalListItem"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "JournalDetailResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "00"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/JournalDetail"
          }
        }
      },
      "Voucher": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string",
            "example": "00001/AKB/03/24"
          },
          "document_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-10T00:00:00Z"
          },
          "document_status": {
            "type": "string",
            "enum": [
              "Draft",
              "Final",
              "Canceled"
            ],
            "example": "Draft"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "Transfer Dana",
              "Kirim Dana",
              "Terima Dana"
            ],
            "example": "Transfer Dana"
          },
          "bank_account_code_from": {
            "type": "string",
            "example": "0001"
          },
          "bank_account_code_to": {
            "type": "string",
            "example": "0002"
          },
          "bank_account_name_from": {
            "type": "string",
            "example": "bank test from"
          },
          "bank_account_name_to": {
            "type": "string",
            "example": "bank test to"
          },
          "total_amount": {
            "type": "number",
            "example": 5000
          },
          "remark": {
            "type": "string",
            "example": "TEST"
          },
          "total_debit": {
            "type": "number",
            "example": 6000
          },
          "total_credit": {
            "type": "number",
            "example": 0
          },
          "menu_code": {
            "type": "string",
            "example": "BPB"
          },
          "menu_desc": {
            "type": "string",
            "example": "Pembayaran Pembelian"
          }
        }
      },
      "VoucherDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Voucher"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VoucherItem"
                }
              }
            }
          }
        ]
      },
      "VoucherItem": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string",
            "example": "00001/AKB/03/24"
          },
          "detail_number": {
            "type": "string",
            "example": "00001"
          },
          "account_number": {
            "type": "string",
            "example": "1.01.01.01.03"
          },
          "account_description": {
            "type": "string",
            "example": "Kas (Account Test)"
          },
          "debit": {
            "type": "number",
            "example": 6000
          },
          "credit": {
            "type": "number",
            "example": 0
          }
        }
      },
      "CreateVoucherRequest": {
        "type": "object",
        "required": [
          "document_date",
          "document_status",
          "document_type",
          "bank_account_code_from",
          "bank_account_code_to",
          "total_amount",
          "items"
        ],
        "properties": {
          "document_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-11T00:00:00Z"
          },
          "document_status": {
            "type": "string",
            "enum": [
              "D",
              "F",
              "C"
            ],
            "example": "D"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "T",
              "S",
              "R"
            ],
            "example": "R"
          },
          "bank_account_code_from": {
            "type": "string",
            "example": "001"
          },
          "bank_account_code_to": {
            "type": "string",
            "example": "3454656"
          },
          "remark": {
            "type": "string",
            "example": "la ta ta ta"
          },
          "total_amount": {
            "type": "number",
            "example": 12000
          },
          "is_use_category": {
            "type": "boolean",
            "example": false
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherItemRequest"
            }
          }
        }
      },
      "UpdateVoucherRequest": {
        "type": "object",
        "properties": {
          "document_status": {
            "type": "string",
            "enum": [
              "D",
              "F",
              "C"
            ],
            "example": "D"
          },
          "document_type": {
            "type": "string",
            "enum": [
              "T",
              "S",
              "R"
            ],
            "example": "R"
          },
          "bank_account_code_from": {
            "type": "string",
            "example": "test-coa3"
          },
          "bank_account_code_to": {
            "type": "string",
            "example": "test-coa4"
          },
          "remark": {
            "type": "string",
            "example": "la ta ta ta"
          },
          "total_amount": {
            "type": "number",
            "example": 12000
          },
          "member_code": {
            "type": "string",
            "example": "0124"
          },
          "category_code": {
            "type": "string",
            "example": "02"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherItemRequest"
            }
          }
        }
      },
      "VoucherItemRequest": {
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "1.01.01.02"
          },
          "debit": {
            "type": "number",
            "example": 0
          },
          "credit": {
            "type": "number",
            "example": 12000
          }
        }
      },
      "JournalListItem": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string",
            "example": "00001/JTR/03/25"
          },
          "document_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-19T00:00:00Z"
          },
          "description": {
            "type": "string",
            "example": "Description"
          },
          "account": {
            "type": "string",
            "example": "1.01.01.01.01 - Kas Kecil (IDR)"
          },
          "menu": {
            "type": "string",
            "example": "Jurnal Transaksi"
          },
          "debit": {
            "type": "number",
            "example": 100000
          },
          "credit": {
            "type": "number",
            "example": 0
          },
          "total": {
            "type": "number",
            "example": 0
          },
          "remark": {
            "type": "string",
            "example": ""
          }
        }
      },
      "JournalDetail": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string",
            "example": "00001/JTR/03/25"
          },
          "document_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-19T00:00:00Z"
          },
          "document_number_origin": {
            "type": "string",
            "example": "00001/JTR/03/25"
          },
          "description": {
            "type": "string",
            "example": "Description"
          },
          "remark": {
            "type": "string",
            "example": ""
          },
          "debit": {
            "type": "number",
            "example": 100000
          },
          "credit": {
            "type": "number",
            "example": 100000
          },
          "menu_code": {
            "type": "string",
            "example": "JTR"
          },
          "menu": {
            "type": "string",
            "example": "Jurnal Transaksi"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalItem"
            }
          }
        }
      },
      "JournalItem": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string",
            "example": "00001/JTR/03/25"
          },
          "detail_number": {
            "type": "string",
            "example": "00001"
          },
          "account_number": {
            "type": "string",
            "example": "1.01.01.01.01"
          },
          "account_description": {
            "type": "string",
            "example": "Kas Kecil (IDR)"
          },
          "debit": {
            "type": "number",
            "example": 100000
          },
          "credit": {
            "type": "number",
            "example": 0
          }
        }
      },
      "CreateJournalRequest": {
        "type": "object",
        "required": [
          "document_date",
          "description",
          "items"
        ],
        "properties": {
          "document_date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-12-19T00:00:00Z"
          },
          "description": {
            "type": "string",
            "example": "Description"
          },
          "remark": {
            "type": "string",
            "example": ""
          },
          "other_amount": {
            "type": "number",
            "example": 2500
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalItemRequest"
            }
          }
        }
      },
      "JournalItemRequest": {
        "type": "object",
        "required": [
          "account_number",
          "debit",
          "credit"
        ],
        "properties": {
          "account_number": {
            "type": "string",
            "example": "1.01.01.01.01"
          },
          "debit": {
            "type": "number",
            "example": 2500
          },
          "credit": {
            "type": "number",
            "example": 0
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 3
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "offset": {
            "type": "integer",
            "example": 0
          },
          "current_page": {
            "type": "integer",
            "example": 1
          },
          "total_pages": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "string",
            "example": "01"
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}